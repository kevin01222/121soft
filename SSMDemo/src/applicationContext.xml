<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<!-- 1-实现IOC容器自动扫描组件@Component的功能,使得我们可以使用注解进行开发 -->
	<context:component-scan base-package="com.neu"></context:component-scan>
	
	<!-- 2-设置SpringMVC框架的相关信息 -->
	<mvc:default-servlet-handler/>
	<mvc:annotation-driven/>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 3-配置C3P0数据源对象 dataSource -->
	<!-- 3.1 说明properties文件的读取路径 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 3.2 根据文件读取路径配置数据源对象 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${connection.driver_class}"></property>
		<property name="jdbcUrl" value="${connection.url}"></property>
		<property name="user" value="${connection.username}"></property>
		<property name="password" value="${connection.password}"></property>
		<property name="minPoolSize" value="${c3p0.min_size}"></property>
		<property name="maxPoolSize" value="${c3p0.max_size}"></property>
		<property name="acquireIncrement" value="${c3p0.acquire_increment}"></property>
		<property name="idleConnectionTestPeriod" value="${c3p0.idle_test_period}"></property>
		<property name="checkoutTimeout" value="${c3p0.timeout}"></property>
		<property name="maxStatements" value="${c3p0.max_statements}"></property>
	</bean>
	<!-- 4-配置SqlSessionFactory(MyBatis的SessionFactory) -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 5-自动扫描并注册MyBatis的Mapper映射接口,返回一个代理对象,供Service使用 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.neu.dao.mapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	
	<!-- 6-基于AOP特性的事务处理机制配置:全配置只用Transactional注解即可 -->
	<bean id="txManager" class=
	"org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="txManager"/>
	
</beans>

















